<mxGraphModel dx="800" dy="1969" grid="1" guides="1" tooltips="1" connect="1" fold="1" page="1" pageScale="1" pageWidth="826" pageHeight="1169" style="default-style2"><root><mxCell id="0"/><mxCell id="1" parent="0"/><mxCell id="3" value="&lt;table style=&quot;font-size: 9pt; border: none; border-collapse: collapse; width: 100%;&quot; cellpadding=&quot;5&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;border: 1px solid gray; background: #e4e4e4;&quot; colspan=&quot;2&quot;&gt;ID3Driver&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;border: 1px solid gray;&quot;&gt;Input&lt;/td&gt;&lt;td style=&quot;border: 1px solid gray;&quot;&gt;&lt;p&gt;example_data&lt;br /&gt;&lt;span style=&quot;font-size: 9pt; font-family: Helvetica;&quot;&gt;attribute_data&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 9pt; font-family: Helvetica;&quot;&gt;target_data&amp;nbsp;&lt;br /&gt;decision_function&amp;nbsp;&lt;br /&gt;N&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;border: 1px solid gray;&quot;&gt;Output&lt;/td&gt;&lt;td style=&quot;border: 1px solid gray;&quot;&gt;Confusion matrix&lt;br /&gt;F&lt;br /&gt;recall&lt;br /&gt;precision&lt;br /&gt;classRate&lt;br /&gt;trees&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;border: 1px solid gray;&quot;&gt;Description&lt;/td&gt;&lt;td style=&quot;border: 1px solid gray;&quot;&gt;performs KFold,&lt;br /&gt; computes all the statistics&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;" style="verticalAlign=top;align=left;overflow=fill;html=1" vertex="1" parent="1"><mxGeometry x="5" y="10" width="220" height="280" as="geometry"/></mxCell><mxCell id="13" value="&lt;table style=&quot;font-size: 9pt; border: none; border-collapse: collapse; width: 100%;&quot; cellpadding=&quot;5&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;border: 1px solid gray; background: #e4e4e4;&quot; colspan=&quot;2&quot;&gt;NFoldValidationMask&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;border: 1px solid gray;&quot;&gt;Input&lt;/td&gt;&lt;td style=&quot;border: 1px solid gray;&quot;&gt;&lt;p&gt;count: number of elements&lt;br /&gt;N number of folds&amp;nbsp;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;border: 1px solid gray;&quot;&gt;Output&lt;/td&gt;&lt;td style=&quot;border: 1px solid gray;&quot;&gt;&lt;p&gt;array of N structures&lt;br /&gt;&lt;span style=&quot;font-size: 9pt; font-family: Helvetica;&quot;&gt;Each structure has&lt;br /&gt;&amp;nbsp; two attributes:&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 9pt; font-family: Helvetica;&quot;&gt;&amp;nbsp;* a train mask&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 9pt; font-family: Helvetica;&quot;&gt;&amp;nbsp;* a test mask&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;border: 1px solid gray;&quot;&gt;Description&lt;/td&gt;&lt;td style=&quot;border: 1px solid gray;&quot;&gt;&lt;p&gt;&lt;span style=&quot;font-size: 9pt; font-family: Helvetica;&quot;&gt;Creates maskes to split&lt;br /&gt; the data into N&lt;br /&gt;random folds.&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;" style="verticalAlign=top;align=left;overflow=fill;html=1" vertex="1" parent="1"><mxGeometry x="270" y="370" width="235" height="280" as="geometry"/></mxCell><mxCell id="14" value="" style="endArrow=none;" edge="1" parent="1" source="3" target="13"><mxGeometry x="6.415929203539804" y="40" as="geometry"><mxPoint x="125" y="330" as="sourcePoint"/><mxPoint x="345" y="460" as="targetPoint"/></mxGeometry></mxCell><mxCell id="15" value="&lt;table style=&quot;font-size: 9pt; border: none; border-collapse: collapse; width: 100%;&quot; cellpadding=&quot;5&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;border: 1px solid gray; background: #e4e4e4;&quot; colspan=&quot;2&quot;&gt;classify&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;border: 1px solid gray;&quot;&gt;Input&lt;/td&gt;&lt;td style=&quot;border: 1px solid gray;&quot;&gt;&lt;p&gt;example_data&lt;br /&gt;&lt;span style=&quot;font-size: 9pt; font-family: Helvetica;&quot;&gt;attribute_data&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 9pt; font-family: Helvetica;&quot;&gt;target_data&amp;nbsp;&lt;br /&gt;decision_function&amp;nbsp;&lt;br /&gt;N&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;border: 1px solid gray;&quot;&gt;Output&lt;/td&gt;&lt;td style=&quot;border: 1px solid gray;&quot;&gt;Confusion matrix&lt;br /&gt;F&lt;br /&gt;recall&lt;br /&gt;precision&lt;br /&gt;classRate&lt;br /&gt;trees&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;border: 1px solid gray;&quot;&gt;Description&lt;/td&gt;&lt;td style=&quot;border: 1px solid gray;&quot;&gt;performs KFold,&lt;br /&gt; computes all the statistics&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;" style="verticalAlign=top;align=left;overflow=fill;html=1" vertex="1" parent="1"><mxGeometry x="10" y="500" width="220" height="280" as="geometry"/></mxCell><mxCell id="16" value="" style="endArrow=none;" edge="1" parent="1" source="3" target="15"><mxGeometry x="-81.62790697674416" as="geometry"><mxPoint x="40" y="290" as="sourcePoint"/><mxPoint x="46.744186046511686" y="870" as="targetPoint"/></mxGeometry></mxCell><mxCell id="17" value="&lt;table style=&quot;font-size: 9pt; border: none; border-collapse: collapse; width: 100%;&quot; cellpadding=&quot;5&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;border: 1px solid gray; background: #e4e4e4;&quot; colspan=&quot;2&quot;&gt;trainer&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;border: 1px solid gray;&quot;&gt;Input&lt;/td&gt;&lt;td style=&quot;border: 1px solid gray;&quot;&gt;&lt;p&gt;examples&lt;br /&gt;&lt;span style=&quot;font-size: 9pt; font-family: Helvetica;&quot;&gt;attributes&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 9pt; font-family: Helvetica;&quot;&gt;target_data&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;border: 1px solid gray;&quot;&gt;Output&lt;/td&gt;&lt;td style=&quot;border: 1px solid gray;&quot;&gt;trees&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;border: 1px solid gray;&quot;&gt;Description&lt;/td&gt;&lt;td style=&quot;border: 1px solid gray;&quot;&gt;Creates all the&lt;br /&gt; binary trees&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;" style="verticalAlign=top;align=left;overflow=fill;html=1" vertex="1" parent="1"><mxGeometry x="270" y="10" width="170" height="180" as="geometry"/></mxCell><mxCell id="18" value="" style="endArrow=none" edge="1" parent="1" target="17"><mxGeometry as="geometry"><mxPoint x="230" y="100" as="sourcePoint"/></mxGeometry></mxCell><mxCell id="19" value="&lt;table style=&quot;font-size: 9pt; border: none; border-collapse: collapse; width: 100%;&quot; cellpadding=&quot;5&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;border: 1px solid gray; background: #e4e4e4;&quot; colspan=&quot;2&quot;&gt;tnode (Class)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;border: 1px solid gray;&quot;&gt;Methods&lt;/td&gt;&lt;td style=&quot;border: 1px solid gray;&quot;&gt;&lt;p&gt;&lt;span style=&quot;font-size: 9pt; font-family: Helvetica;&quot;&gt;setX : set the attribute X&lt;br /&gt;getX : returns the attribute X&lt;br /&gt;addKid : adds a &amp;nbsp;node&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;border: 1px solid gray;&quot;&gt;main&lt;br /&gt;attributes&lt;/td&gt;&lt;td style=&quot;border: 1px solid gray;&quot;&gt;&lt;p&gt;kids : array of tnodes&lt;br /&gt;op : the attribute of the node&lt;br /&gt;class : defined only if leaf&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; value of the leaf (0 or 1)&lt;br /&gt;infoGain : information gain of the attribute&lt;br /&gt;indop : numerical value of op&amp;nbsp;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;border: 1px solid gray;&quot;&gt;Description&lt;/td&gt;&lt;td style=&quot;border: 1px solid gray;&quot;&gt;Every tree is represented by a class.&lt;br /&gt;They are created &amp;amp; accessed by methods only.&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;" style="verticalAlign=top;align=left;overflow=fill;html=1" vertex="1" parent="1"><mxGeometry x="535" width="340" height="270" as="geometry"/></mxCell><mxCell id="20" value="" style="endArrow=none" edge="1" parent="1" source="17" target="19"><mxGeometry as="geometry"/></mxCell><mxCell id="24" value="&lt;table style=&quot;font-size: 9pt; border: none; border-collapse: collapse; width: 100%;&quot; cellpadding=&quot;5&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;border: 1px solid gray; background: #e4e4e4;&quot; colspan=&quot;2&quot;&gt;ID3&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;border: 1px solid gray;&quot;&gt;Input&lt;/td&gt;&lt;td style=&quot;border: 1px solid gray;&quot;&gt;&lt;p&gt;example&lt;br /&gt;&lt;span style=&quot;font-size: 9pt; font-family: Helvetica;&quot;&gt;attr&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: Helvetica;&quot;&gt;&lt;span style=&quot;font-size: 12px;&quot;&gt;binary_target&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;border: 1px solid gray;&quot;&gt;Output&lt;/td&gt;&lt;td style=&quot;border: 1px solid gray;&quot;&gt;tree&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;border: 1px solid gray;&quot;&gt;Description&lt;/td&gt;&lt;td style=&quot;border: 1px solid gray;&quot;&gt;Recursive function that&lt;br /&gt;creates one binary tree&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;" style="verticalAlign=top;align=left;overflow=fill;html=1" vertex="1" parent="1"><mxGeometry x="585" y="420" width="220" height="170" as="geometry"/></mxCell><mxCell id="25" value="" style="endArrow=none;exitX=0.5;exitY=1" edge="1" parent="1" source="17" target="24"><mxGeometry x="210" y="-15" as="geometry"><mxPoint x="470" y="240" as="sourcePoint"/><mxPoint x="721.3333333333333" y="440" as="targetPoint"/></mxGeometry></mxCell><mxCell id="26" value="" style="endArrow=none" edge="1" parent="1" source="19" target="24"><mxGeometry x="322.5" y="5" as="geometry"><mxPoint x="685" y="190" as="sourcePoint"/><mxPoint x="572.5" y="380" as="targetPoint"/></mxGeometry></mxCell><mxCell id="27" value="&lt;table style=&quot;font-size: 9pt; border: none; border-collapse: collapse; width: 100%;&quot; cellpadding=&quot;5&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;border: 1px solid gray; background: #e4e4e4;&quot; colspan=&quot;2&quot;&gt;ChooseBestDecisionAttribute&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;border: 1px solid gray;&quot;&gt;Input&lt;/td&gt;&lt;td style=&quot;border: 1px solid gray;&quot;&gt;&lt;p&gt;examples&lt;br /&gt;&lt;span style=&quot;font-size: 9pt; font-family: Helvetica;&quot;&gt;attributes&lt;/span&gt;&lt;span style=&quot;font-size: 9pt; font-family: Helvetica;&quot;&gt;&amp;nbsp;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: Helvetica; font-size: 9pt;&quot;&gt;binary target&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;border: 1px solid gray;&quot;&gt;Output&lt;/td&gt;&lt;td style=&quot;border: 1px solid gray;&quot;&gt;&lt;p&gt;best_attribute&lt;/p&gt;&lt;p&gt;MaxGain (information gain&lt;br /&gt;&amp;nbsp; of best_attribute)&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;border: 1px solid gray;&quot;&gt;Description&lt;/td&gt;&lt;td style=&quot;border: 1px solid gray;&quot;&gt;performs KFold,&lt;br /&gt; computes all the statistics&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;" style="verticalAlign=top;align=left;overflow=fill;html=1" vertex="1" parent="1"><mxGeometry x="580" y="630" width="230" height="240" as="geometry"/></mxCell><mxCell id="28" value="" style="endArrow=none" edge="1" parent="1" source="24" target="27"><mxGeometry as="geometry"/></mxCell><mxCell id="29" value="&lt;table style=&quot;font-size: 9pt; border: none; border-collapse: collapse; width: 100%;&quot; cellpadding=&quot;5&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;border: 1px solid gray; background: #e4e4e4;&quot; colspan=&quot;2&quot;&gt;decisionFunction&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;border: 1px solid gray;&quot;&gt;Input&lt;/td&gt;&lt;td style=&quot;border: 1px solid gray;&quot;&gt;&lt;p&gt;answer&lt;br /&gt;depth&lt;br /&gt;ig (information gain)&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;border: 1px solid gray;&quot;&gt;Output&lt;/td&gt;&lt;td style=&quot;border: 1px solid gray;&quot;&gt;cl : class of the new example&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;border: 1px solid gray;&quot;&gt;Description&lt;/td&gt;&lt;td style=&quot;border: 1px solid gray;&quot;&gt;&lt;p&gt;Combines the results&lt;br /&gt; of all the binaray trees.&lt;/p&gt;&lt;p&gt;We implanted two main&lt;br /&gt;methods to do this using:&lt;br /&gt;&amp;nbsp;* information gain&amp;nbsp;&lt;br /&gt;&amp;nbsp;* depth of the path&amp;nbsp;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;" style="verticalAlign=top;align=left;overflow=fill;html=1" vertex="1" parent="1"><mxGeometry x="5" y="890" width="235" height="270" as="geometry"/></mxCell><mxCell id="30" value="" style="endArrow=none" edge="1" parent="1" source="15" target="29"><mxGeometry as="geometry"/></mxCell><mxCell id="31" value="&lt;table style=&quot;font-size: 9pt; border: none; border-collapse: collapse; width: 100%;&quot; cellpadding=&quot;5&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;border: 1px solid gray; background: #e4e4e4;&quot; colspan=&quot;2&quot;&gt;depthClassify&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;border: 1px solid gray;&quot;&gt;Input&lt;/td&gt;&lt;td style=&quot;border: 1px solid gray;&quot;&gt;&lt;p&gt;answer&lt;br /&gt;depth&lt;br /&gt;~&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;border: 1px solid gray;&quot;&gt;Output&lt;/td&gt;&lt;td style=&quot;border: 1px solid gray;&quot;&gt;cl : class of the new example&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;border: 1px solid gray;&quot;&gt;Description&lt;/td&gt;&lt;td style=&quot;border: 1px solid gray;&quot;&gt;&lt;p&gt;Combines the results&lt;br /&gt; of all the binaray trees.&lt;br /&gt;When all the results are equals,&lt;br /&gt;decision is made based on the&lt;br /&gt;depth of the paths.&amp;nbsp;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;" style="verticalAlign=top;align=left;overflow=fill;html=1" vertex="1" parent="1"><mxGeometry x="280" y="710" width="250" height="240" as="geometry"/></mxCell><mxCell id="32" value="" style="endArrow=none" edge="1" parent="1" source="29" target="31"><mxGeometry as="geometry"/></mxCell><mxCell id="33" value="&lt;table style=&quot;font-size: 9pt; border: none; border-collapse: collapse; width: 100%;&quot; cellpadding=&quot;5&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;border: 1px solid gray; background: #e4e4e4;&quot; colspan=&quot;2&quot;&gt;igClassify&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;border: 1px solid gray;&quot;&gt;Input&lt;/td&gt;&lt;td style=&quot;border: 1px solid gray;&quot;&gt;&lt;p&gt;answer&lt;br /&gt;~&lt;br /&gt;ig (information gain)&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;border: 1px solid gray;&quot;&gt;Output&lt;/td&gt;&lt;td style=&quot;border: 1px solid gray;&quot;&gt;cl : class of the new example&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;border: 1px solid gray;&quot;&gt;Description&lt;/td&gt;&lt;td style=&quot;border: 1px solid gray;&quot;&gt;&lt;p&gt;Combines the results&lt;br /&gt; of all the binaray trees.&lt;br /&gt;When all the results are equals,&lt;br /&gt;decision is made based on the&lt;br /&gt;sum of the information gains at&lt;br /&gt;each node&lt;span style=&quot;font-size: 9pt; font-family: Helvetica;&quot;&gt;.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;" style="verticalAlign=top;align=left;overflow=fill;html=1" vertex="1" parent="1"><mxGeometry x="575" y="910" width="260" height="260" as="geometry"/></mxCell><mxCell id="34" value="" style="endArrow=none;exitX=0;exitY=0.75" edge="1" parent="1" source="33"><mxGeometry x="27.5" y="157.5514903195956" as="geometry"><mxPoint x="550" y="1094.390134529148" as="sourcePoint"/><mxPoint x="240" y="1091.6098654708521" as="targetPoint"/></mxGeometry></mxCell></root></mxGraphModel>